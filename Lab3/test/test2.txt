0 add r0,r0,r0
1 addi a0,zero,4		<-f(4),改變r4的值代表 f(r4)，若設太大可能要把data memory設大一些
2 addi t1,zero,1
3 jal fib			<-JAL:當fib function結束後PC會跳到j final
4 j final

fib:
5 addi sp,sp,-12		//stack point -12
6 sw ra,0(sp)		//以下三道sw將reg存入memory中
7 sw s0,4(sp)
8 sw s1,8(sp)
9 add s0,a0,zero
10 beq s0,zero,re1		//判斷是否f(0)	
11 beq s0,t1,re1		//判斷是否f(1)
12 addi a0,s0,-1
13 jal fib
14 add s1,zero,v0
15 addi a0,s0,-2
16 jal fib
17 add v0,v0,s1

exitfib:
18 lw ra,0(sp)
19 lw s0,4(sp)
20 lw s1,8(sp)
21 addi sp,sp,12
22 jr ra			//function call結束

re1:
23 addi v0,zero,1
24 j exitfib

final:
25~31 nop






------
run完r2=5